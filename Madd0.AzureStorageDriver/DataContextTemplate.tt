<#@ template language="C#" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>

namespace <#= this.Namespace #>
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Madd0.UserQuery;
    using Microsoft.WindowsAzure;
    using Microsoft.WindowsAzure.Storage;
    using Microsoft.WindowsAzure.Storage.Auth;
    using Microsoft.WindowsAzure.Storage.Table;
    using Microsoft.WindowsAzure.Storage.Table.DataServices;

    public class <#= this.TypeName #>
    {
        public <#= this.TypeName #>(CloudTableClient  client)
        {
            this.TableClient = client;
        }

        public CloudTableClient TableClient
        {
            get;
            private set;
        }

<#
foreach (var table in this.Tables)
{
#>
        public ExtendedTableQuery<<#= table.Name #>Entity> <#= table.Name #>
        {
            get
            {
                return new ExtendedTableQuery<<#= table.Name #>Entity>(this.TableClient.GetTableReference("<#= table.Name #>"));
            }
        }
<#
}
#>
    }

<#
foreach (var table in this.Tables)
{
#>
    public class <#= table.Name #>Entity : TableEntity
    {
    <#
    foreach (var column in table.Columns)
    {
        if (!this.DefaultProperties.Contains(column.Name))
        {
    #>
        public <#= column.TypeName #> <#= column.Name #>
        {
            get;
            set;
        }
    <#
        }
    }
    #>
    }
<#
}
#>
}

<#+
private readonly List<string> DefaultProperties = new List<string> { "PartitionKey", "RowKey", "Timestamp", "ETag" };

public string Namespace { get; set; }

public string TypeName { get; set; }

public IEnumerable<CloudTable> Tables { get; set; }
#>